{
    "init": "Initialises a new Git repository in the current directory.",
    "clone": "Creates a local copy of a remote repository. Usage: `git clone <repository_ssh>`.",
    "status": "Shows the current state of the repository, including modified files and untracked files.",
    "add": "Adds changes in the working directory to the staging area (index) for the next commit. Usage: `git add <file>` or `git add .`. Use `git add -A` to add all changes, including modifications, deletions, and new files.",
    "reset": "Unstages changes for a specific file, removing it from the staging area. Usage: `git reset <file>`.",
    "commit": "Records changes from the staging area into the Git history. You'll need to provide a commit message in a text editor. Use `git commit -m \"Your commit message\"` to create a commit with a message in one command.",
    "log": "Displays the commit history, showing the author, date, and commit message.",
    "diff": "Shows the changes made to the files in the working directory compared to the last commit.",
    "pull": "Fetches and merges changes from the remote repository into the current branch.",
    "push": "Sends local commits to the remote repository. Use `git push <remote> <branch>` to specify a branch and remote; typically, the remote is 'origin'.",
    "branch": "Lists all local branches, marking the current one with an asterisk. Use `git branch <branch_name>` to create a new branch or `git branch -d <branch_name>` to delete a branch.",
    "checkout": "Switches to a specified branch using `git checkout <branch_name>`. Use `git checkout -b <branch_name>` to create a new branch and switch to it simultaneously.",
    "merge": "Merges the specified branch into the current branch. Must be executed from within the branch you wish to **merge into**. Usage: `git merge <branch_name>`.",
    "remote": "Lists all remote repositories. Use `git remote add <remote_name> <repository_url>` to add a new remote repository or `git remote remove <remote_name>` to remove one. Use `git remote -v` for detailed information about the remotes.",
    "fetch": "Retrieves changes from the remote repository without merging them into the current branch.",
    "stash": "Temporarily stores changes that aren't ready for a commit. Use `git stash apply` to apply the most recent stash but leave it in the stash list, `git stash pop` to apply and remove the most recent stash, and `git stash list` to view all stashes.",
    "tag": "Lists all the tags. Use `git tag <tag_name>` to create a lightweight tag at the current commit. For annotated tags with a message, use `git tag -a <tag_name> -m \"Tag message\"`."
}
