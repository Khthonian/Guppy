{
    "init": "Initialises a new Git repository in the current directory.",
    "clone": "Creates a local copy of a remote repository. Usage: `git clone <repository_ssh>`.",
    "status": "Shows the current state of the repository, including modified files and untracked files.",
    "add": "Adds changes in the working directory to the staging area (index) for the next commit. Usage: `git add <file>` or `git add .`",
    "add -A": "Adds all changes, including modifications, deletions, and new files, to the staging area.",
    "reset": "Unstages changes for a specific file, removing it from the staging area. Usage: `git reset <file>`.",
    "commit": "Records changes from the staging area into the Git history. You'll need to provide a commit message in a text editor, in your case, VS Code.",
    "commit -m": "Creates a commit with a commit message in a single command, bypassing the text editor. Usage: `git commit -m \"Your commit message\"`.",
    "log": "Displays the commit history, showing the author, date, and commit message.",
    "diff": "Shows the changes made to the files in the working directory compared to the last commit.",
    "pull": "Fetches and merges changes from the remote repository into the current branch.",
    "push": "Sends local commits to the remote repository. Reserve this for when you're on the main branch, to be safe.",
    "push remote branch": "Pushes the specified branch to the specified remote repository; this is the safest way to push in my opinion, even on the main branch. The remote is typically origin, although there are more details we can go into on this. Usage: `git push <remote> <branch>`.",
    "branch": "Lists all local branches and marks the current branch with an asterisk.",
    "branch name": "Creates a new branch with the given name. Less preferable to `git checkout -b <branch_name>` in my opinion. Usage: `git branch <branch_name>`.",
    "branch -d": "Deletes a specific branch. Usage: `git branch -d <branch_name>`.",
    "checkout": "Switches to the specified branch. Usage: `git checkout <branch_name>`.",
    "checkout -b": "Creates a new branch and switches to it. Usage: `git checkout -b <branch_name>`.",
    "merge": "Merges the specified branch into the current branch. Must be executed from within the branch you wish to **merge into**. Usage: `git merge <branch_name>`.",
    "remote": "Lists all remote repositories linked to the current repository.",
    "remote add": "Adds a new remote repository with the specified name and URL. Usage: `git remote add <remote_name> <repository_url>`.",
    "remote remove": "Removes the specified remote repository from the list of remotes. Usage: `git remote remove <remote_name>`.",
    "remote -v": "Displays detailed information about the remote repositories.",
    "fetch": "Retrieves changes from the remote repository without merging them into the current branch.",
    "tag": "Lists all the tags in the repository.",
    "tag name": "Creates a new lightweight tag at the current commit. Usage: `git tag <tag_name>`.",
    "tag -a": "Creates an annotated tag with a message. Usage: `git tag -a <tag_name> -m \"Tag message\"`."
}
